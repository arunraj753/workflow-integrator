"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import logging
import os
from pathlib import Path
import json

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


def read_config():
    config_data = {}
    config_path = os.path.join(BASE_DIR, 'config.json')
    if os.path.exists(config_path):
        with open(config_path, 'r') as file:
            config_data = json.load(file)
    return config_data


WORKFLOW_CONFIG = read_config()
SECRET_KEY = os.environ.get("WORKFLOW_INTEGRATOR_DJANGO_SECRET_KEY", None)
if not SECRET_KEY:
    print("SECRET_KEY not found")
    exit(0)

trello_api_key = os.environ.get("TRELLO_API_KEY", None)
trello_api_token = os.environ.get("TRELLO_API_TOKEN", None)
if not trello_api_key:
    print("trello_api_key not found")
    exit(0)

if not trello_api_token:
    print("trello_api_token not found")
    exit(0)
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "wfit",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "server.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "server.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
if WORKFLOW_CONFIG.get("DATABASE", None) == "POSTGRES":
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': os.environ.get("WORKFLOW_INTEGRATOR_POSTGRES_DATABASE", None),
            'USER': os.environ.get("WORKFLOW_INTEGRATOR_POSTGRES_USERNAME", None),
            'PASSWORD': os.environ.get("WORKFLOW_INTEGRATOR_POSTGRES_PASSWORD", None),
            'HOST': os.environ.get("WORKFLOW_INTEGRATOR_POSTGRES_HOST", None),
            'PORT': int(os.environ.get("WORKFLOW_INTEGRATOR_POSTGRES_PORT", None))
        }
    }

else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = 'Asia/Calcutta'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
APPLICATION_NAME = "WFIT"

logger = logging.getLogger("wfit")
logging.basicConfig(filename='wfit.log', level=logging.DEBUG,
                    format='%(asctime)s - %(levelname)s - %(message)s')

